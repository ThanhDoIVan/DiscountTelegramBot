import json
from main import *

from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from aiogram.utils.markdown import hbold, hlink

bot = Bot(token=YOUR_TOKEN, parse_mode=types.ParseMode.HTML) 
# you can get your own token via BotFather at Telegram
dp = Dispatcher(bot)

async def bot_output(data, used_list, message: types.Message):
    count = 0
    n_count = 0
    for item in data:
        if item not in used_list:
            try:
                sizes = ', '.join(item.get('available_sizes'))
                card = f"{hlink(item.get('model_name'), item.get('link'))}\n" \
                       f"{hbold('–ë—Ä—ç–Ω–¥: ')} {item.get('brand_name')}\n" \
                       f"{hbold('–ü—Ä–∞–π—Å: ')} {item.get('old_price')} BYN\n" \
                       f"{hbold('–î–æ—Å—Ç—É–ø–Ω—ã–µ –†–∞–∑–º–µ—Ä—ã: ')} {sizes} \n" \
                       f"{hbold('–ü—Ä–∞–π—Å —Å–æ —Å–∫–∏–¥–∫–æ–π ')} -{item.get('discount')}%: {item.get('price')} BYN üî•"
                used_list.append(item)
                await message.answer(card)
                count += 1
            except Exception as ex:
                print(f"{count} : {ex}")
            if count == 5:
                n_count = 0
                break
        else:
            n_count += 1

    if n_count >= 4:
        await message.answer('–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞..')

@dp.message_handler(commands='start')
async def start(message: types.Message):
    start_buttons = ['üßî –ú—É–∂—Å–∫–æ–µ', 'üë©‚Äçü¶∞ –ñ–µ–Ω—Å–∫–æ–µ']
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*start_buttons)
    await message.answer('–¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π üìàüìâ', reply_markup=keyboard)

@dp.message_handler(commands='menu')
async def menu(message: types.Message):
    await start(message)

@dp.message_handler(commands='help')
async def help(message: types.Message):
    await message.answer(f"üî∏–í—ã–±–∏—Ä–∞–π—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∏ –±–æ—Ç –≤—ã–¥–∞—Å—Ç {hbold('5')} –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞–∑–¥–µ–ª–∞. \n"
                         "üî∏–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –≤–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é. \n\n"
                         "üî∏–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏–ª–∏ /menu .")
    await message.answer('–ü–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ ü§ì')

@dp.message_handler(Text(equals='üßî –ú—É–∂—Å–∫–æ–µ'))
async def more_btn(message: types.Message):
    used_list = []
    buttons = ['–û–¥–µ–∂–¥–∞ "–º"', '–û–±—É–≤—å "–º"', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã "–º"']
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*buttons)

    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞ üëî', reply_markup=keyboard)

    @dp.message_handler(Text(equals='–û–±—É–≤—å "–º"'))
    async def get_discount_man(message: types.Message):
        await message.answer('Please wait..')

        collect_data_men_shoes()

        with open('data/result_data_men_shoes.json', encoding='utf-8') as file:
            data = json.load(file)

        await bot_output(data, used_list, message)


    @dp.message_handler(Text(equals='–û–¥–µ–∂–¥–∞ "–º"'))
    async def more_btn(message: types.Message):
        buttons = ['–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞', '–°–≤–∏—Ç–µ—Ä—ã', '–¢–æ–ª—Å—Ç–æ–≤–∫–∏', '–®—Ç–∞–Ω—ã', '–†—É–±–∞—à–∫–∏']
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*buttons)

        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é ü•ºüëïüëñ', reply_markup=keyboard)


        @dp.message_handler(Text(equals='–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞'))
        async def get_discount_man(message: types.Message):
            await message.answer('Please wait..')

            collect_data_men_outerwear()

            with open('data/result_data_men_outerwear.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)

        @dp.message_handler(Text(equals='–°–≤–∏—Ç–µ—Ä—ã'))
        async def get_discount_man(message: types.Message):
            await message.answer('Please wait..')

            collect_data_men_pullover()

            with open('data/result_data_men_pullover.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)

        @dp.message_handler(Text(equals='–¢–æ–ª—Å—Ç–æ–≤–∫–∏'))
        async def get_discount_man(message: types.Message):
            await message.answer('Please wait..')

            collect_data_men_sweatshirts()

            with open('data/result_data_men_sweatshirts.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)

        @dp.message_handler(Text(equals='–®—Ç–∞–Ω—ã'))
        async def get_discount_man(message: types.Message):
            await message.answer('Please wait..')

            collect_data_men_pants()

            with open('data/result_data_men_pants.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)

        @dp.message_handler(Text(equals='–†—É–±–∞—à–∫–∏'))
        async def get_discount_man(message: types.Message):
            await message.answer('Please wait..')

            collect_data_men_shirts()

            with open('data/result_data_men_shirts.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)


    @dp.message_handler(Text(equals='–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã "–º"'))
    async def get_discount_man(message: types.Message):
        await message.answer('Please wait..')

        collect_data_men_accessories()

        with open('data/result_data_men_accessories.json', encoding='utf-8') as file:
            data = json.load(file)

        await bot_output(data, used_list, message)

@dp.message_handler(Text(equals='üë©‚Äçü¶∞ –ñ–µ–Ω—Å–∫–æ–µ'))
async def more_btn(message: types.Message):
    used_list = []
    buttons = ['–û–¥–µ–∂–¥–∞ "–∂"', '–û–±—É–≤—å "–∂"', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã "–∂"']
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*buttons)

    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞ üëó', reply_markup=keyboard)

    @dp.message_handler(Text(equals='–û–±—É–≤—å "–∂"'))
    async def get_discount_woman(message: types.Message):
        await message.answer('Please wait..')

        collect_data_women_shoes()

        with open('data/result_data_women_shoes.json', encoding='utf-8') as file:
            data = json.load(file)

        await bot_output(data, used_list, message)


    @dp.message_handler(Text(equals='–û–¥–µ–∂–¥–∞ "–∂"'))
    async def more_btns(message: types.Message):
        buttons = ['–§—É—Ç–±–æ–ª–∫–∏ –∏ –ü–æ–ª–æ', '–ö–æ–º–±–∏–Ω–µ–∑–æ–Ω—ã', '–ü–ª–∞—Ç—å—è', '–°–≤–∏—Ç—à–æ—Ç—ã –∏ –•—É–¥–∏', '–ë—Ä—é–∫–∏']
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*buttons)

        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é ü•ªüëòüëö', reply_markup=keyboard)

        @dp.message_handler(Text(equals='–§—É—Ç–±–æ–ª–∫–∏ –∏ –ü–æ–ª–æ'))
        async def get_discount_woman(message: types.Message):
            await message.answer('Please wait..')

            collect_data_women_shirts()

            with open('data/result_data_women_shirts.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)

        @dp.message_handler(Text(equals='–ö–æ–º–±–∏–Ω–µ–∑–æ–Ω—ã'))
        async def get_discount_woman(message: types.Message):
            await message.answer('Please wait..')

            collect_data_women_overalls()

            with open('data/result_data_women_overalls.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)

        @dp.message_handler(Text(equals='–ü–ª–∞—Ç—å—è'))
        async def get_discount_woman(message: types.Message):
            await message.answer('Please wait..')

            collect_data_women_dress()

            with open('data/result_data_women_dress.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)

        @dp.message_handler(Text(equals='–°–≤–∏—Ç—à–æ—Ç—ã –∏ –•—É–¥–∏'))
        async def get_discount_woman(message: types.Message):
            await message.answer('Please wait..')

            collect_data_women_hoodies()

            with open('data/result_data_women_hoodies.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)

        @dp.message_handler(Text(equals='–ë—Ä—é–∫–∏'))
        async def get_discount_woman(message: types.Message):
            await message.answer('Please wait..')

            collect_data_women_trousers()

            with open('data/result_data_women_trousers.json', encoding='utf-8') as file:
                data = json.load(file)

            await bot_output(data, used_list, message)


    @dp.message_handler(Text(equals='–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã "–∂"'))
    async def get_discount_woman(message: types.Message):
        await message.answer('Please wait..')

        collect_data_women_accessories()

        with open('data/result_data_women_accessories.json', encoding='utf-8') as file:
            data = json.load(file)

        await bot_output(data, used_list, message)

def main():
    executor.start_polling(dp)

if __name__ == '__main__':
    main()
